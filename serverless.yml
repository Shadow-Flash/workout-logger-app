service: workout-logger-app
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  # Not using this as you might need to deploy
  # deploymentBucket:
  #   name: ${sls:stage}-deployment-bucket
  #   blockPublicAccess: true

plugins:
  - serverless-esbuild
#   - serverless-offline

package:
  individually: true

layers:
  HelperResources:
    path: layer/nodejs
    name: ${sls:stage}-lambda-layer
    description: It contains all the necessary helper functions and packages
    compatibleRuntimes:
      - nodejs20.x
    compatibleArchitectures:
      - arm64

functions:
  CreateUserForWorkoutAppFunction:
    name: ${sls:stage}-create-user-for-workout-app
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{data}
          method: post

  GetWorkoutListFunction:
    name: ${sls:stage}-get-workout-list
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{id}/all
          method: get

  PostWorkoutRepAndSetFunction:
    name: ${sls:stage}-post-workout-rep-set
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{id}/{name}/{data}
          method: post

  PutWorkoutRepAndSetFunction:
    name: ${sls:stage}-put-workout-rep-set
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{id}/{name}/{data}
          method: put

  DeleteWorkoutFunction:
    name: ${sls:stage}-delete-workout
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{id}/{name}
          method: delete

  DeleteWorkoutRepAndSetFunction:
    name: ${sls:stage}-delete-workout-rep-set
    handler: index.handler
    layers:
      - !Ref HelperResourcesLambdaLayer
    events:
      - httpApi:
          path: /{id}/{name}/{data}
          method: delete
